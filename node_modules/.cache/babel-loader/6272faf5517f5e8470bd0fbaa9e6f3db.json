{"remainingRequest":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\src\\classes\\sparql.js","dependencies":[{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\src\\classes\\sparql.js","mtime":1576506452252},{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXFVzZXJzXFxDQU1JTExFXFxEb3dubG9hZHNcXFRldGFyZF9BcHBfSVNCTlxcVGV0YXJkX0FwcF9JU0JOXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcVXNlcnNcXENBTUlMTEVcXERvd25sb2Fkc1xcVGV0YXJkX0FwcF9JU0JOXFxUZXRhcmRfQXBwX0lTQk5cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKdmFyIFNwYXJxbCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFNwYXJxbChlbmRwb2ludCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNwYXJxbCk7CgogICAgLy9TdG9ja2FnZSBkZSBsJ1VSTCBkdSBlbmRwb2ludAogICAgdGhpcy5lbmRwb2ludCA9IGVuZHBvaW50OwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNwYXJxbCwgW3sKICAgIGtleTogInF1ZXJ5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBxdWVyeShfcXVlcnkpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vQ3LDqWF0aW9uIGQndW4gcHJvbWlzZSBxdWkgc2VyYSByw6lzb2x1IHBsdXMgdGFyZC4uLgogICAgICB2YXIgcXVlcnlQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIC8vVW4gbm91dmVsIG9iamV0IHJlcXVldGUgOiBvbiB1dGlsaXNlIGxhIGNsb3N1cmUgcG91ciBsJ3V0aWxpc2VyIHBsdXMgdGFyZC4uLgogICAgICAgIHZhciBodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7IC8vU3VyIGNoYW5nZW1lbnQgZGUgc3RhdXQgZGUgbGEgcmVxdcOqdGUKCiAgICAgICAgaHR0cC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgLy9TaSBjJ2VzdCBmaW5pCiAgICAgICAgICBpZiAoaHR0cC5yZWFkeVN0YXRlID09PSBYTUxIdHRwUmVxdWVzdC5ET05FKSB7CiAgICAgICAgICAgIC8vU2kgYydlc3QgT0sKICAgICAgICAgICAgaWYgKGh0dHAuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAvL09uIHLDqWN1cMOocmUgbGEgcsOpcG9uc2UKICAgICAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBodHRwLnJlc3BvbnNlVGV4dDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvL1NpIHBhcyBPSyA6IGZhbHNlCiAgICAgICAgICAgICAgdmFyIHJlc3BvbnNlID0gZmFsc2U7CiAgICAgICAgICAgIH0gLy9TaW5vbiBudWxsID0gbGEgcmVxdcOqdGUgbidlc3QgcGFzIGZpbmllCgogICAgICAgICAgfSBlbHNlIHZhciByZXNwb25zZSA9IG51bGw7IC8vU2kgbGEgcsOpcG9uc2UgZXN0IGZhbHNlLCBvbiByZWpldHRlCgoKICAgICAgICAgIGlmIChyZXNwb25zZSA9PT0gZmFsc2UpIHJlamVjdChodHRwLnN0YXR1cyk7IC8vU2kgYydlc3QgcGFzIG51bCwgb24gYSBldSBsYSByw6lwb25zZQogICAgICAgICAgZWxzZSBpZiAocmVzcG9uc2UgIT09IG51bGwpIHsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgLy9PbiBwYXJzZSBsZSBqc29uIHJlbnZvecOpCiAgICAgICAgICAgICAgICB2YXIganNvblJlc3BvbnNlID0gSlNPTi5wYXJzZShyZXNwb25zZSk7CiAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgLy9MZSBqc29uIG4nZXN0IHBhcyBjb3JyZWN0LCBvbiByZWpldHRlCiAgICAgICAgICAgICAgICByZWplY3QoIkNhbid0IHBhcnNlIHJlc3BvbnNlICEiKTsKICAgICAgICAgICAgICB9IC8vT24gcsOpc291ZCBhdmVjIGxlIHLDqXN1bHRhdCBwYXJzw6kgIQoKCiAgICAgICAgICAgICAgcmVzb2x2ZShqc29uUmVzcG9uc2UpOwogICAgICAgICAgICB9CiAgICAgICAgfTsgLy9PdXZlcnR1cmUgZCd1bmUgcmVxdcOqdGUgUE9TVAoKCiAgICAgICAgaHR0cC5vcGVuKCdQT1NUJywgX3RoaXMuZW5kcG9pbnQpOyAvL09uIHBvc3RlIGxlcyBkb25uw6llcyBlbiBmb3JtdWxhaXJlIGVuY29kw6kKCiAgICAgICAgaHR0cC5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIik7IC8vT24gZW52b2llIGxlcyBwYXJhbcOodHJlcyBxdWVyeSwgZm9ybWF0IGFwcGxpY2F0aW9uL3NwYXJxbC1yZXN1bHRzK2pzb24gZXQgbCdhZHJlc3NlIGR1IGVuZHBvaW50IGF1IHByb3h5IHBocAoKICAgICAgICBodHRwLnNlbmQoInF1ZXJ5PSIgKyBlbmNvZGVVUklDb21wb25lbnQoX3F1ZXJ5KSArICImZm9ybWF0PSIgKyBlbmNvZGVVUklDb21wb25lbnQoImFwcGxpY2F0aW9uL3NwYXJxbC1yZXN1bHRzK2pzb24iKSk7CiAgICAgIH0pOyAvL09uIHJldm9pZSBsZSBwcm9taXNlCgogICAgICByZXR1cm4gcXVlcnlQcm9taXNlOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNwYXJxbDsKfSgpOwoKZXhwb3J0IHsgU3BhcnFsIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/CAMILLE/Downloads/Tetard_App_ISBN/Tetard_App_ISBN/src/classes/sparql.js"],"names":["Sparql","endpoint","query","queryPromise","Promise","resolve","reject","http","XMLHttpRequest","onreadystatechange","e","readyState","DONE","status","response","responseText","jsonResponse","JSON","parse","open","setRequestHeader","send","encodeURIComponent"],"mappings":";;;;IAAqBA,M;;;AACjB,kBAAYC,QAAZ,EAAsB;AAAA;;AAClB;AACA,SAAKA,QAAL,GAAcA,QAAd;AACH;;;;0BAEKC,M,EAAO;AAAA;;AACT;AACA,UAAIC,YAAY,GAAC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACvC;AACA,YAAIC,IAAI,GAAC,IAAIC,cAAJ,EAAT,CAFuC,CAGvC;;AACAD,QAAAA,IAAI,CAACE,kBAAL,GAAwB,UAACC,CAAD,EAAK;AACzB;AACA,cAAIH,IAAI,CAACI,UAAL,KAAoBH,cAAc,CAACI,IAAvC,EAA6C;AACzC;AACA,gBAAIL,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACrB;AACA,kBAAIC,QAAQ,GAACP,IAAI,CAACQ,YAAlB;AACH,aAHD,MAGO;AACH;AACA,kBAAID,QAAQ,GAAC,KAAb;AACH,aARwC,CASzC;;AACH,WAVD,MAUO,IAAIA,QAAQ,GAAC,IAAb,CAZkB,CAazB;;;AACA,cAAIA,QAAQ,KAAG,KAAf,EAAsBR,MAAM,CAACC,IAAI,CAACM,MAAN,CAAN,CAAtB,CACA;AADA,eAEK,IAAIC,QAAQ,KAAG,IAAf,EAAqB;AACtB,kBAAI;AACA;AACA,oBAAIE,YAAY,GAACC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAjB;AACH,eAHD,CAGE,OAAMJ,CAAN,EAAS;AACP;AACAJ,gBAAAA,MAAM,CAAC,wBAAD,CAAN;AACH,eAPqB,CAQtB;;;AACAD,cAAAA,OAAO,CAACW,YAAD,CAAP;AACH;AACJ,SA3BD,CAJuC,CAgCvC;;;AACAT,QAAAA,IAAI,CAACY,IAAL,CAAU,MAAV,EAAiB,KAAI,CAAClB,QAAtB,EAjCuC,CAkCvC;;AACAM,QAAAA,IAAI,CAACa,gBAAL,CAAsB,cAAtB,EAAsC,mCAAtC,EAnCuC,CAoCvC;;AACAb,QAAAA,IAAI,CAACc,IAAL,CAAU,WAASC,kBAAkB,CAACpB,MAAD,CAA3B,GAAmC,UAAnC,GAA8CoB,kBAAkB,CAAC,iCAAD,CAA1E;AACH,OAtCY,CAAjB,CAFS,CAyCT;;AACA,aAAOnB,YAAP;AACH;;;;;;SAjDgBH,M","sourcesContent":["export default class Sparql {\n    constructor(endpoint) {\n        //Stockage de l'URL du endpoint\n        this.endpoint=endpoint;\n    }\n    \n    query(query) {\n        //Création d'un promise qui sera résolu plus tard...\n        let queryPromise=new Promise((resolve,reject)=>{\n                //Un nouvel objet requete : on utilise la closure pour l'utiliser plus tard...\n                let http=new XMLHttpRequest();\n                //Sur changement de staut de la requête\n                http.onreadystatechange=(e)=>{\n                    //Si c'est fini\n                    if (http.readyState === XMLHttpRequest.DONE) {\n                        //Si c'est OK\n                        if (http.status === 200) {\n                            //On récupère la réponse\n                            var response=http.responseText;\n                        } else {\n                            //Si pas OK : false\n                            var response=false;\n                        }\n                        //Sinon null = la requête n'est pas finie\n                    } else var response=null;\n                    //Si la réponse est false, on rejette\n                    if (response===false) reject(http.status);\n                    //Si c'est pas nul, on a eu la réponse\n                    else if (response!==null) {\n                        try {\n                            //On parse le json renvoyé\n                            var jsonResponse=JSON.parse(response);\n                        } catch(e) {\n                            //Le json n'est pas correct, on rejette\n                            reject(\"Can't parse response !\");\n                        }\n                        //On résoud avec le résultat parsé !\n                        resolve(jsonResponse);\n                    }\n                }\n                //Ouverture d'une requête POST\n                http.open('POST',this.endpoint);\n                //On poste les données en formulaire encodé\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                //On envoie les paramètres query, format application/sparql-results+json et l'adresse du endpoint au proxy php\n                http.send(\"query=\"+encodeURIComponent(query)+\"&format=\"+encodeURIComponent(\"application/sparql-results+json\"));\n            });\n        //On revoie le promise\n        return queryPromise;\n    }\n}\n\n"]}]}