{"remainingRequest":"C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\src\\classes\\sparql.js","dependencies":[{"path":"C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\src\\classes\\sparql.js","mtime":1576506452252},{"path":"C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CAMILLE\\Desktop\\BNF-Scan\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXFVzZXJzXFxDQU1JTExFXFxEZXNrdG9wXFxCTkYtU2Nhblxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXFVzZXJzXFxDQU1JTExFXFxEZXNrdG9wXFxCTkYtU2Nhblxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Cgp2YXIgU3BhcnFsID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU3BhcnFsKGVuZHBvaW50KSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3BhcnFsKTsKCiAgICAvL1N0b2NrYWdlIGRlIGwnVVJMIGR1IGVuZHBvaW50CiAgICB0aGlzLmVuZHBvaW50ID0gZW5kcG9pbnQ7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU3BhcnFsLCBbewogICAga2V5OiAicXVlcnkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHF1ZXJ5KF9xdWVyeSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy9DcsOpYXRpb24gZCd1biBwcm9taXNlIHF1aSBzZXJhIHLDqXNvbHUgcGx1cyB0YXJkLi4uCiAgICAgIHZhciBxdWVyeVByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgLy9VbiBub3V2ZWwgb2JqZXQgcmVxdWV0ZSA6IG9uIHV0aWxpc2UgbGEgY2xvc3VyZSBwb3VyIGwndXRpbGlzZXIgcGx1cyB0YXJkLi4uCiAgICAgICAgdmFyIGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsgLy9TdXIgY2hhbmdlbWVudCBkZSBzdGF1dCBkZSBsYSByZXF1w6p0ZQoKICAgICAgICBodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAvL1NpIGMnZXN0IGZpbmkKICAgICAgICAgIGlmIChodHRwLnJlYWR5U3RhdGUgPT09IFhNTEh0dHBSZXF1ZXN0LkRPTkUpIHsKICAgICAgICAgICAgLy9TaSBjJ2VzdCBPSwogICAgICAgICAgICBpZiAoaHR0cC5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgIC8vT24gcsOpY3Vww6hyZSBsYSByw6lwb25zZQogICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IGh0dHAucmVzcG9uc2VUZXh0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vU2kgcGFzIE9LIDogZmFsc2UKICAgICAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBmYWxzZTsKICAgICAgICAgICAgfSAvL1Npbm9uIG51bGwgPSBsYSByZXF1w6p0ZSBuJ2VzdCBwYXMgZmluaWUKCiAgICAgICAgICB9IGVsc2UgdmFyIHJlc3BvbnNlID0gbnVsbDsgLy9TaSBsYSByw6lwb25zZSBlc3QgZmFsc2UsIG9uIHJlamV0dGUKCgogICAgICAgICAgaWYgKHJlc3BvbnNlID09PSBmYWxzZSkgcmVqZWN0KGh0dHAuc3RhdHVzKTsgLy9TaSBjJ2VzdCBwYXMgbnVsLCBvbiBhIGV1IGxhIHLDqXBvbnNlCiAgICAgICAgICBlbHNlIGlmIChyZXNwb25zZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAvL09uIHBhcnNlIGxlIGpzb24gcmVudm95w6kKICAgICAgICAgICAgICAgIHZhciBqc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAvL0xlIGpzb24gbidlc3QgcGFzIGNvcnJlY3QsIG9uIHJlamV0dGUKICAgICAgICAgICAgICAgIHJlamVjdCgiQ2FuJ3QgcGFyc2UgcmVzcG9uc2UgISIpOwogICAgICAgICAgICAgIH0gLy9PbiByw6lzb3VkIGF2ZWMgbGUgcsOpc3VsdGF0IHBhcnPDqSAhCgoKICAgICAgICAgICAgICByZXNvbHZlKGpzb25SZXNwb25zZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OyAvL091dmVydHVyZSBkJ3VuZSByZXF1w6p0ZSBQT1NUCgoKICAgICAgICBodHRwLm9wZW4oJ1BPU1QnLCBfdGhpcy5lbmRwb2ludCk7IC8vT24gcG9zdGUgbGVzIGRvbm7DqWVzIGVuIGZvcm11bGFpcmUgZW5jb2TDqQoKICAgICAgICBodHRwLnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtVHlwZSIsICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKTsgLy9PbiBlbnZvaWUgbGVzIHBhcmFtw6h0cmVzIHF1ZXJ5LCBmb3JtYXQgYXBwbGljYXRpb24vc3BhcnFsLXJlc3VsdHMranNvbiBldCBsJ2FkcmVzc2UgZHUgZW5kcG9pbnQgYXUgcHJveHkgcGhwCgogICAgICAgIGh0dHAuc2VuZCgicXVlcnk9IiArIGVuY29kZVVSSUNvbXBvbmVudChfcXVlcnkpICsgIiZmb3JtYXQ9IiArIGVuY29kZVVSSUNvbXBvbmVudCgiYXBwbGljYXRpb24vc3BhcnFsLXJlc3VsdHMranNvbiIpKTsKICAgICAgfSk7IC8vT24gcmV2b2llIGxlIHByb21pc2UKCiAgICAgIHJldHVybiBxdWVyeVByb21pc2U7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gU3BhcnFsOwp9KCk7CgpleHBvcnQgeyBTcGFycWwgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["C:/Users/CAMILLE/Desktop/BNF-Scan/src/classes/sparql.js"],"names":["Sparql","endpoint","query","queryPromise","Promise","resolve","reject","http","XMLHttpRequest","onreadystatechange","e","readyState","DONE","status","response","responseText","jsonResponse","JSON","parse","open","setRequestHeader","send","encodeURIComponent"],"mappings":";;;;IAAqBA,M;;;AACjB,kBAAYC,QAAZ,EAAsB;AAAA;;AAClB;AACA,SAAKA,QAAL,GAAcA,QAAd;AACH;;;;0BAEKC,M,EAAO;AAAA;;AACT;AACA,UAAIC,YAAY,GAAC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACvC;AACA,YAAIC,IAAI,GAAC,IAAIC,cAAJ,EAAT,CAFuC,CAGvC;;AACAD,QAAAA,IAAI,CAACE,kBAAL,GAAwB,UAACC,CAAD,EAAK;AACzB;AACA,cAAIH,IAAI,CAACI,UAAL,KAAoBH,cAAc,CAACI,IAAvC,EAA6C;AACzC;AACA,gBAAIL,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACrB;AACA,kBAAIC,QAAQ,GAACP,IAAI,CAACQ,YAAlB;AACH,aAHD,MAGO;AACH;AACA,kBAAID,QAAQ,GAAC,KAAb;AACH,aARwC,CASzC;;AACH,WAVD,MAUO,IAAIA,QAAQ,GAAC,IAAb,CAZkB,CAazB;;;AACA,cAAIA,QAAQ,KAAG,KAAf,EAAsBR,MAAM,CAACC,IAAI,CAACM,MAAN,CAAN,CAAtB,CACA;AADA,eAEK,IAAIC,QAAQ,KAAG,IAAf,EAAqB;AACtB,kBAAI;AACA;AACA,oBAAIE,YAAY,GAACC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAjB;AACH,eAHD,CAGE,OAAMJ,CAAN,EAAS;AACP;AACAJ,gBAAAA,MAAM,CAAC,wBAAD,CAAN;AACH,eAPqB,CAQtB;;;AACAD,cAAAA,OAAO,CAACW,YAAD,CAAP;AACH;AACJ,SA3BD,CAJuC,CAgCvC;;;AACAT,QAAAA,IAAI,CAACY,IAAL,CAAU,MAAV,EAAiB,KAAI,CAAClB,QAAtB,EAjCuC,CAkCvC;;AACAM,QAAAA,IAAI,CAACa,gBAAL,CAAsB,cAAtB,EAAsC,mCAAtC,EAnCuC,CAoCvC;;AACAb,QAAAA,IAAI,CAACc,IAAL,CAAU,WAASC,kBAAkB,CAACpB,MAAD,CAA3B,GAAmC,UAAnC,GAA8CoB,kBAAkB,CAAC,iCAAD,CAA1E;AACH,OAtCY,CAAjB,CAFS,CAyCT;;AACA,aAAOnB,YAAP;AACH;;;;;;SAjDgBH,M","sourcesContent":["export default class Sparql {\n    constructor(endpoint) {\n        //Stockage de l'URL du endpoint\n        this.endpoint=endpoint;\n    }\n    \n    query(query) {\n        //Création d'un promise qui sera résolu plus tard...\n        let queryPromise=new Promise((resolve,reject)=>{\n                //Un nouvel objet requete : on utilise la closure pour l'utiliser plus tard...\n                let http=new XMLHttpRequest();\n                //Sur changement de staut de la requête\n                http.onreadystatechange=(e)=>{\n                    //Si c'est fini\n                    if (http.readyState === XMLHttpRequest.DONE) {\n                        //Si c'est OK\n                        if (http.status === 200) {\n                            //On récupère la réponse\n                            var response=http.responseText;\n                        } else {\n                            //Si pas OK : false\n                            var response=false;\n                        }\n                        //Sinon null = la requête n'est pas finie\n                    } else var response=null;\n                    //Si la réponse est false, on rejette\n                    if (response===false) reject(http.status);\n                    //Si c'est pas nul, on a eu la réponse\n                    else if (response!==null) {\n                        try {\n                            //On parse le json renvoyé\n                            var jsonResponse=JSON.parse(response);\n                        } catch(e) {\n                            //Le json n'est pas correct, on rejette\n                            reject(\"Can't parse response !\");\n                        }\n                        //On résoud avec le résultat parsé !\n                        resolve(jsonResponse);\n                    }\n                }\n                //Ouverture d'une requête POST\n                http.open('POST',this.endpoint);\n                //On poste les données en formulaire encodé\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                //On envoie les paramètres query, format application/sparql-results+json et l'adresse du endpoint au proxy php\n                http.send(\"query=\"+encodeURIComponent(query)+\"&format=\"+encodeURIComponent(\"application/sparql-results+json\"));\n            });\n        //On revoie le promise\n        return queryPromise;\n    }\n}\n\n"]}]}