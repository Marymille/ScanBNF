{"remainingRequest":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\src\\classes\\recuperationDonnees.js","dependencies":[{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\src\\classes\\recuperationDonnees.js","mtime":1576506438462},{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CAMILLE\\Downloads\\Tetard_App_ISBN\\Tetard_App_ISBN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOlxcVXNlcnNcXENBTUlMTEVcXERvd25sb2Fkc1xcVGV0YXJkX0FwcF9JU0JOXFxUZXRhcmRfQXBwX0lTQk5cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfc3BhcnFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3NwYXJxbC5qcyIpKTsKCnZhciBfSXNibiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9Jc2JuLmpzIikpOwoKY2xhc3MgcmVjdXBlcmF0aW9uRG9ubmVlcyB7CiAgY29uc3RydWN0b3IocmVzdWx0YXRzKSB7CiAgICB0aGlzLnJlc3VsdGF0cyA9IHJlc3VsdGF0czsKICAgIHRoaXMuaXNibiA9IG5ldyBfSXNibi5kZWZhdWx0KHJlc3VsdGF0cy5lYW4pOwogICAgdGhpcy5yZXF1ZXRlX2Rvbm5lZXNfZGVfYmFzZSh0aGlzLmlzYm4pOwogICAgdGhpcy5yZXF1ZXRlX2Rvbm5lZXNfYXV0ZXVyKHRoaXMuaXNibik7CiAgICB0aGlzLnJlcXVldGVfZG9ubmVzX2NvbXBsZW1lbnRhaXJlcyh0aGlzLmlzYm4pOwogICAgdGhpcy5maWxsSVNCTjEwKHRoaXMuaXNibik7CiAgfQoKICByZXF1ZXRlX2Rvbm5lZXNfZGVfYmFzZShpc2JuKSB7CiAgICB7CiAgICAgIGNvbnNvbGUubG9nKGlzYm4uZ2V0Rm9ybWF0ZWRJU0JOKCkpOwogICAgICBjb25zb2xlLmxvZyhpc2JuLmdldEZvcm1hdGVkSVNCTjEwKCkpOwogICAgICB2YXIgc3BhcnFsID0gbmV3IF9zcGFycWwuZGVmYXVsdCgnaHR0cHM6Ly9kYXRhLmJuZi5mci9zcGFycWwnKTsKICAgICAgc3BhcnFsLnF1ZXJ5KGBQUkVGSVggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4KICAgICAgICAgICAgUFJFRklYIGZyYnItcmRhOiA8aHR0cDovL3Jkdm9jYWIuaW5mby91cmkvc2NoZW1hL0ZSQlJlbnRpdGllc1JEQS8+CiAgICAgICAgICAgIFBSRUZJWCBibmYtb250bzogPGh0dHA6Ly9kYXRhLmJuZi5mci9vbnRvbG9neS9ibmYtb250by8+CiAgICAgICAgICAgIFBSRUZJWCBkY3Rlcm1zOiA8aHR0cDovL3B1cmwub3JnL2RjL3Rlcm1zLz4KICAgICAgICAgICAgUFJFRklYIHJkYXJlbGF0aW9uc2hpcHM6IDxodHRwOi8vcmR2b2NhYi5pbmZvL1JEQVJlbGF0aW9uc2hpcHNXRU1JLz4KICAgICAgICAgICAgUFJFRklYIGZvYWY6IDxodHRwOi8veG1sbnMuY29tL2ZvYWYvMC4xLz4KICAgICAgICAgICAgUFJFRklYIHJkYWdyb3VwMWVsZW1lbnRzOiA8aHR0cDovL3Jkdm9jYWIuaW5mby9FbGVtZW50cy8+CiAgICAgICAgICAgIFNlbGVjdCA/dGl0cmVfbWFuaWZlc3RhdGlvbiA/ZGF0ZV9tYW5pZmVzdGF0aW9uID9saWV1X3B1YmxpY2F0aW9uX21hbmlmZXN0YXRpb24gP2xhbmd1ZV9leHByZXNzaW9uID9kZXNjcmlwdGlvbl9tYW5pZmVzdGF0aW9uID9lZGl0ZXVyX21hbmlmZXN0YXRpb24gP25vbV9hdXRldXIgP3N1amV0X29ldXZyZSB3aGVyZSB7CiAgICAgICAgICAgICAgICA/bWFuaWYgZGN0ZXJtczp0aXRsZSA/dGl0cmVfbWFuaWZlc3RhdGlvbjsKICAgICAgICAgICAgICAgICAgICBkY3Rlcm1zOmRhdGUgP2RhdGVfbWFuaWZlc3RhdGlvbjsKICAgICAgICAgICAgICAgICAgICBkY3Rlcm1zOmRlc2NyaXB0aW9uID9kZXNjcmlwdGlvbl9tYW5pZmVzdGF0aW9uOwogICAgICAgICAgICAgICAgICAgIGRjdGVybXM6cHVibGlzaGVyID9lZGl0ZXVyX21hbmlmZXN0YXRpb247CiAgICAgICAgICAgICAgICAgICAgcmRhZ3JvdXAxZWxlbWVudHM6cGxhY2VPZlB1YmxpY2F0aW9uID9saWV1X3B1YmxpY2F0aW9uX21hbmlmZXN0YXRpb247CiAgICAgICAgICAgICAgICAgICAgcmRhcmVsYXRpb25zaGlwczpleHByZXNzaW9uTWFuaWZlc3RlZCA/ZXhwcmVzc2lvbi4KICAgICAgICAgICAgICAgID9leHByZXNzaW9uIDxodHRwOi8vZGF0YS5ibmYuZnIvdm9jYWJ1bGFyeS9yb2xlcy9yNzA+ID9hdXRldXIuCiAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICA/ZXhwcmVzc2lvbiBkY3Rlcm1zOmxhbmd1YWdlID9sYW5ndWVfZXhwcmVzc2lvbi4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIG9wdGlvbmFsewogICAgICAgICAgICAgICAgICAgID9vZXV2cmUgcmRhcmVsYXRpb25zaGlwczpleHByZXNzaW9uT2ZXb3JrID9leHByZXNzaW9uOwogICAgICAgICAgICAgICAgICAgICAgICBibmYtb250bzpzdWJqZWN0ID9zdWpldF9vZXV2cmUuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICA/YXV0ZXVyIGZvYWY6bmFtZSA/bm9tX2F1dGV1ci4KICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICA/bWFuaWYgYm5mLW9udG86aXNibiAiJHtpc2JuLmdldEZvcm1hdGVkSVNCTigpfSIKICAgICAgICAgICAgICAgIH0gVU5JT04gewogICAgICAgICAgICAgICAgICAgID9tYW5pZiBibmYtb250bzppc2JuICIke2lzYm4uZ2V0Rm9ybWF0ZWRJU0JOMTAoKX0iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9YCkudGhlbihyZXN1bHQgPT4gewogICAgICAgIHRoaXMuZmlsbEluZm9zKHJlc3VsdCwgaXNibik7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmVxdWV0ZV9kb25uZWVzX2F1dGV1cihpc2JuKSB7CiAgICB7CiAgICAgIHZhciBzcGFycWwgPSBuZXcgX3NwYXJxbC5kZWZhdWx0KCdodHRwczovL2RhdGEuYm5mLmZyL3NwYXJxbCcpOwogICAgICBzcGFycWwucXVlcnkoYFBSRUZJWCBibmYtb250bzogPGh0dHA6Ly9kYXRhLmJuZi5mci9vbnRvbG9neS9ibmYtb250by8+CiAgICAgICAgICAgIFBSRUZJWCByZGFyZWxhdGlvbnNoaXBzOiA8aHR0cDovL3Jkdm9jYWIuaW5mby9SREFSZWxhdGlvbnNoaXBzV0VNSS8+CiAgICAgICAgICAgIFBSRUZJWCBmb2FmOiA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+CiAgICAgICAgICAgIFBSRUZJWCByZGFncm91cDJlbGVtZW50czogPGh0dHA6Ly9yZHZvY2FiLmluZm8vRWxlbWVudHNHcjIvPgogICAgICAgICAgICBQUkVGSVggZGN0ZXJtczogPGh0dHA6Ly9wdXJsLm9yZy9kYy90ZXJtcy8+CgkJCVBSRUZJWCBibmZyb2xlczogPGh0dHA6Ly9kYXRhLmJuZi5mci92b2NhYnVsYXJ5L3JvbGVzLz4KCiAgICAgICAgICAgIHNlbGVjdCA/bm9tX2F1dGV1ciA/cGF5c19hdXRldXIgP2ltYWdlX2F1dGV1ciA/aW5mb3JtYXRpb25zX2F1dGV1ciA/cGFnZV9hdXRldXIgP2RhdGVfbmFpc3NhbmNlX2F1dGV1ciA/bGlldV9uYWlzc2FuY2VfYXV0ZXVyID9kYXRlX21vcnRfYXV0ZXVyID9saWV1X21vcnRfYXV0ZXVyIHdoZXJlewogICAgICAgICAgICAgICAgP21hbmlmZXN0YXRpb24gcmRhcmVsYXRpb25zaGlwczpleHByZXNzaW9uTWFuaWZlc3RlZCA/ZXhwcmVzc2lvbi4KICAgICAgICAgICAgICAgID9leHByZXNzaW9uIGJuZnJvbGVzOnI3MCA/YXV0ZXVyLgogICAgICAgICAgICAgICAgP2F1dGV1ciBmb2FmOm5hbWUgP25vbV9hdXRldXIuCiAgCQkJCW9wdGlvbmFsewogICAgCQkJCT9hdXRldXIgZm9hZjpwYWdlID9wYWdlX2F1dGV1ci4KICAJCQkJfQogICAgICAgICAgICAgICAgb3B0aW9uYWx7CiAgICAgICAgICAgICAgICAgICAgP2F1dGV1ciBibmYtb250bzpmaXJzdFllYXIgP2RhdGVfbmFpc3NhbmNlX2F1dGV1ci4KICAgICAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICAgICAgP2F1dGV1ciBibmYtb250bzpsYXN0WWVhciA/ZGF0ZV9tb3J0X2F1dGV1ci4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICA/YXV0ZXVyIHJkYWdyb3VwMmVsZW1lbnRzOnBsYWNlT2ZCaXJ0aCA/bGlldV9uYWlzc2FuY2VfYXV0ZXVyLgogICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsewogICAgICAgICAgICAgICAgICAgICAgICA/YXV0ZXVyIHJkYWdyb3VwMmVsZW1lbnRzOnBsYWNlT2ZEZWF0aCA/bGlldV9tb3J0X2F1dGV1ci4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICA/YXV0ZXVyIHJkYWdyb3VwMmVsZW1lbnRzOmNvdW50cnlBc3NvY2lhdGVkV2l0aFRoZVBlcnNvbiA/cGF5c19hdXRldXIuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICA/YXV0ZXVyIGZvYWY6ZGVwaWN0aW9uID9pbWFnZV9hdXRldXIuCiAgICAgICAgICAgICAgICAgICAgZmlsdGVyKHJlZ2V4KD9pbWFnZV9hdXRldXIsICJodHRwOi8vY29tbW9ucy53aWtpbWVkaWEub3JnL3dpa2kvU3BlY2lhbDpGaWxlUGF0aC8iKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIG9wdGlvbmFsewogICAgICAgICAgICAgICAgICAgID9hdXRldXIgcmRhZ3JvdXAyZWxlbWVudHM6YmlvZ3JhcGhpY2FsSW5mb3JtYXRpb24gP2luZm9ybWF0aW9uc19hdXRldXIuCiAgICAgICAgICAgICAgICB9CiAgCQkJCSB7CiAgICAgICAgICAgICAgICAgICAgP21hbmlmZXN0YXRpb24gYm5mLW9udG86aXNibiAiJHtpc2JuLmdldEZvcm1hdGVkSVNCTigpfSIKICAgICAgICAgICAgICAgIH0gVU5JT04gewogICAgICAgICAgICAgICAgICAgID9tYW5pZmVzdGF0aW9uIGJuZi1vbnRvOmlzYm4gIiR7aXNibi5nZXRGb3JtYXRlZElTQk4xMCgpfSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBsaW1pdCAxYCkudGhlbihyZXN1bHRfYXV0ZXVyID0+IHsKICAgICAgICB0aGlzLmZpbGxJbmZvc0F1dGV1cihyZXN1bHRfYXV0ZXVyLCBpc2JuKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXF1ZXRlX2Rvbm5lc19jb21wbGVtZW50YWlyZXMoaXNibikgewogICAgewogICAgICB2YXIgc3BhcnFsID0gbmV3IF9zcGFycWwuZGVmYXVsdCgnaHR0cHM6Ly9kYXRhLmJuZi5mci9zcGFycWwnKTsKICAgICAgc3BhcnFsLnF1ZXJ5KGBQUkVGSVggYm5mLW9udG86IDxodHRwOi8vZGF0YS5ibmYuZnIvb250b2xvZ3kvYm5mLW9udG8vPgogICAgICAgICAgICBQUkVGSVggcmRhcmVsYXRpb25zaGlwczogPGh0dHA6Ly9yZHZvY2FiLmluZm8vUkRBUmVsYXRpb25zaGlwc1dFTUkvPgogICAgICAgICAgICBQUkVGSVggZGN0ZXJtczogPGh0dHA6Ly9wdXJsLm9yZy9kYy90ZXJtcy8+CiAgICAgICAgICAgIFBSRUZJWCBmb2FmOiA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+CiAgICAgICAgICAgIFBSRUZJWCByZGY6IDxodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjPgogICAgICAgICAgICBQUkVGSVggc2tvczogPGh0dHA6Ly93d3cudzMub3JnLzIwMDQvMDIvc2tvcy9jb3JlIz4KICAgICAgICAgICAgUFJFRklYIGJuZnJvbGVzOiA8aHR0cDovL2RhdGEuYm5mLmZyL3ZvY2FidWxhcnkvcm9sZXMvPgogICAgICAgICAgICAKICAgICAgICAgICAgc2VsZWN0ID9pc2JuID9leHRyYWl0X21hbmlmZXN0YXRpb24gP3RpdHJlX21hbmlmZXN0YXRpb25zX2F1dGV1ciA/cHViID9kYXRlX21hbmlmZXN0YXRpb25zX2F1dGV1ciA/c3VqZXRfYXV0ZXVyIHdoZXJlewogICAgICAgICAgICAgICAgP21hbmlmZXN0YXRpb24gcmRhcmVsYXRpb25zaGlwczpleHByZXNzaW9uTWFuaWZlc3RlZCA/ZXhwcmVzc2lvbi4KICAgICAgICAgICAgICAgID9leHByZXNzaW9uIGJuZnJvbGVzOnI3MCA/YXV0ZXVyLgogICAgICAgICAgICAgICAgP2V4cHJlc3Npb25zX2F1dGV1ciBibmZyb2xlczpyNzAgP2F1dGV1ci4KICAgICAgICAgICAgICAgICNkY3Rlcm1zOmxhbmd1YWdlIDxodHRwOi8vaWQubG9jLmdvdi92b2NhYnVsYXJ5L2lzbzYzOS0yL2ZyZT4uCiAgICAgICAgICAgICAgICA/bWFuaWZlc3RhdGlvbnNfYXV0ZXVyIHJkYXJlbGF0aW9uc2hpcHM6ZXhwcmVzc2lvbk1hbmlmZXN0ZWQgP2V4cHJlc3Npb25zX2F1dGV1cjsKICAgICAgICAgICAgICAgICAgICBkY3Rlcm1zOnRpdGxlID90aXRyZV9tYW5pZmVzdGF0aW9uc19hdXRldXI7CiAgICAgICAgICAgICAgICAgICAgZGN0ZXJtczpkYXRlID9kYXRlX21hbmlmZXN0YXRpb25zX2F1dGV1cjsKICAgICAgICAgICAgICAgICAgICBibmYtb250bzppc2JuID9pc2JuOwogICAgICAgICAgICAgICAgICAgIGRjdGVybXM6cHVibGlzaGVyID9wdWIuCiAgICAgICAgICAgICAgICBvcHRpb25hbHsKICAgICAgICAgICAgICAgICAgICA/bWFuaWZlc3RhdGlvbnNfYXV0ZXVyIGRjdGVybXM6YWJzdHJhY3QgP2V4dHJhaXRfbWFuaWZlc3RhdGlvbi4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIG9wdGlvbmFsewogICAgICAgICAgICAgICAgICAgID9tYW5pZmVzdGF0aW9uc19hdXRldXIgZGN0ZXJtczpzdWJqZWN0ID9zdWpldF9hdXRldXIuCiAgICAgICAgICAgICAgICB9CiAgCQkJCXsKICAgICAgICAgICAgICAgICAgICA/bWFuaWZlc3RhdGlvbiBibmYtb250bzppc2JuICIke2lzYm4uZ2V0Rm9ybWF0ZWRJU0JOKCl9IgogICAgICAgICAgICAgICAgfSBVTklPTiB7CiAgICAgICAgICAgICAgICAgICAgP21hbmlmZXN0YXRpb24gYm5mLW9udG86aXNibiAiJHtpc2JuLmdldEZvcm1hdGVkSVNCTjEwKCl9IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICBncm91cCBieSA/dGl0cmVfbWFuaWZlc3RhdGlvbnNfYXV0ZXVyCiAgICAgICAgICAgIGxpbWl0IDEwMGApLnRoZW4ocmVzdWx0X2NvbXBsZW1lbnRhaXJlcyA9PiB7CiAgICAgICAgdGhpcy5maWxsSW5mb3NDb21wbGVtZW50YWlyZXMocmVzdWx0X2NvbXBsZW1lbnRhaXJlcywgaXNibik7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0KCiAgZ2V0VmFsdWUoJG9iamV0LCAkbCkgewogICAgcmV0dXJuICRvYmpldFskbF0gPyAkb2JqZXRbJGxdLnZhbHVlIDogIiI7CiAgfQoKICBmaWxsSVNCTjEwKGlzYm4pIHsKICAgIHZhciBpc2JuID0gdGhpcy5pc2JuLmdldElTQk4xMCgpOwogICAgdGhpcy5yZXN1bHRhdHMuaXNibjEwID0gaXNibjsKICB9CgogIGZpbGxJbmZvcyhyZXN1bHQsIGlzYm4pIHsKICAgIGlmIChyZXN1bHQucmVzdWx0cy5iaW5kaW5ncy5sZW5ndGgpIHsKICAgICAgbGV0IHJlc3VsdGF0cyA9IHJlc3VsdC5yZXN1bHRzLmJpbmRpbmdzWzBdOwogICAgICB0aGlzLnJlc3VsdGF0cy50aXRyZV9tYW5pZmVzdGF0aW9uID0gdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHMsICd0aXRyZV9tYW5pZmVzdGF0aW9uJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmRhdGVfbWFuaWZlc3RhdGlvbiA9IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzLCAnZGF0ZV9tYW5pZmVzdGF0aW9uJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmxpZXVfcHVibGljYXRpb25fbWFuaWZlc3RhdGlvbiA9IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzLCAnbGlldV9wdWJsaWNhdGlvbl9tYW5pZmVzdGF0aW9uJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmxhbmd1ZV9leHByZXNzaW9uID0gdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHMsICdsYW5ndWVfZXhwcmVzc2lvbicpOwogICAgICB0aGlzLnJlc3VsdGF0cy5kZXNjcmlwdGlvbl9tYW5pZmVzdGF0aW9uID0gdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHMsICdkZXNjcmlwdGlvbl9tYW5pZmVzdGF0aW9uJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmVkaXRldXJfbWFuaWZlc3RhdGlvbiA9IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzLCAnZWRpdGV1cl9tYW5pZmVzdGF0aW9uJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLm5vbV9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ25vbV9hdXRldXInKTsKICAgICAgdGhpcy5yZXN1bHRhdHMuc3VqZXRfb2V1dnJlID0gdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHMsICdzdWpldF9vZXV2cmUnKTsKICAgIH0KICB9CgogIGZpbGxJbmZvc0F1dGV1cihyZXN1bHRfYXV0ZXVyLCBpc2JuKSB7CiAgICBpZiAocmVzdWx0X2F1dGV1ci5yZXN1bHRzLmJpbmRpbmdzLmxlbmd0aCkgewogICAgICBsZXQgcmVzdWx0YXRzID0gcmVzdWx0X2F1dGV1ci5yZXN1bHRzLmJpbmRpbmdzWzBdOwogICAgICB0aGlzLnJlc3VsdGF0cy5hdXRldXIucGF5c19hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ3BheXNfYXV0ZXVyJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmF1dGV1ci5pbWFnZV9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgImltYWdlX2F1dGV1ciIpOwogICAgICB0aGlzLnJlc3VsdGF0cy5hdXRldXIuaW5mb3JtYXRpb25zX2F1dGV1ciA9IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzLCAnaW5mb3JtYXRpb25zX2F1dGV1cicpOwogICAgICB0aGlzLnJlc3VsdGF0cy5hdXRldXIucGFnZV9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ3BhZ2VfYXV0ZXVyJyk7CiAgICAgIHRoaXMucmVzdWx0YXRzLmF1dGV1ci5kYXRlX25haXNzYW5jZV9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ2RhdGVfbmFpc3NhbmNlX2F1dGV1cicpOwogICAgICB0aGlzLnJlc3VsdGF0cy5hdXRldXIubGlldV9uYWlzc2FuY2VfYXV0ZXVyID0gdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHMsICdsaWV1X25haXNzYW5jZV9hdXRldXInKTsKICAgICAgdGhpcy5yZXN1bHRhdHMuYXV0ZXVyLmRhdGVfbW9ydF9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ2RhdGVfbW9ydF9hdXRldXInKTsKICAgICAgdGhpcy5yZXN1bHRhdHMuYXV0ZXVyLmxpZXVfbW9ydF9hdXRldXIgPSB0aGlzLmdldFZhbHVlKHJlc3VsdGF0cywgJ2xpZXVfbW9ydF9hdXRldXInKTsKICAgIH0KICB9CgogIGZpbGxJbmZvc0NvbXBsZW1lbnRhaXJlcyhyZXN1bHRfY29tcGxlbWVudGFpcmVzLCBpc2JuKSB7CiAgICBpZiAocmVzdWx0X2NvbXBsZW1lbnRhaXJlcy5yZXN1bHRzLmJpbmRpbmdzLmxlbmd0aCkgewogICAgICB0aGlzLnJlc3VsdGF0cy5kb25uZWVzX2NvbXBsZW1lbnRhaXJlcyA9IFtdOwogICAgICBsZXQgcmVzdWx0YXRzID0gcmVzdWx0X2NvbXBsZW1lbnRhaXJlcy5yZXN1bHRzLmJpbmRpbmdzOwoKICAgICAgZm9yIChsZXQgaSBpbiByZXN1bHRhdHMpIHsKICAgICAgICBsZXQgZG9ubmVlcyA9IHsKICAgICAgICAgIGlzYm46IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzW2ldLCAiaXNibiIpLAogICAgICAgICAgZXh0cmFpdF9tYW5pZmVzdGF0aW9uOiB0aGlzLmdldFZhbHVlKHJlc3VsdGF0c1tpXSwgImV4dHJhaXRfbWFuaWZlc3RhdGlvbiIpLAogICAgICAgICAgdGl0cmVfbWFuaWZlc3RhdGlvbnNfYXV0ZXVyOiB0aGlzLmdldFZhbHVlKHJlc3VsdGF0c1tpXSwgJ3RpdHJlX21hbmlmZXN0YXRpb25zX2F1dGV1cicpLAogICAgICAgICAgcHViOiB0aGlzLmdldFZhbHVlKHJlc3VsdGF0c1tpXSwgJ3B1Yi52YWx1ZScpLAogICAgICAgICAgZGF0ZV9tYW5pZmVzdGF0aW9uc19hdXRldXI6IHRoaXMuZ2V0VmFsdWUocmVzdWx0YXRzW2ldLCAnZGF0ZV9tYW5pZmVzdGF0aW9uc19hdXRldXInKSwKICAgICAgICAgIHN1amV0X2F1dGV1cjogdGhpcy5nZXRWYWx1ZShyZXN1bHRhdHNbaV0sICdzdWpldF9hdXRldXInKQogICAgICAgIH07CiAgICAgICAgdGhpcy5yZXN1bHRhdHMuZG9ubmVlc19jb21wbGVtZW50YWlyZXMucHVzaChkb25uZWVzKTsKICAgICAgfQogICAgfQogIH0KCn0KCmV4cG9ydHMuZGVmYXVsdCA9IHJlY3VwZXJhdGlvbkRvbm5lZXM7"},null]}